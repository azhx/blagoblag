Known unknowns - zero days in the wild
======================================

This past week Google's Project Zero disclosed an `unfixed security issue in
Microsoft's Edge browser`_. This is not the first time Microsoft failed to
patch an issue within Project Zero's disclosure timeline. This produces strong
feelings in the information security community, generally in one of three
categories: praising Google's vulnerability research, criticizing Microsoft's
response, or criticizing Google for publicly disclosing the vulnerability
before it was patched.

The debate over what the correct vulnerability disclosure policy is not a new
one. Often times this debate focuses on how much risk is generated by
potentially giving new attackers access to this vulnerability vs. how well
defenders will be able to protect themselves given knowledge of the
vulnerability. But this ignores a third group: attackers who already are aware
of the vulnerability, and are actively exploiting.

Read any online discussion over vulnerability disclosure policy and someone
will ask, "What is the urgency around this vulnerability, there's no evidence
of use in the wild?" I believe this is both a common sentiment, and one based
on a dangerous misunderstanding of vulnerability exploitation. It fundamentally
assumes that we have good visibility into what vulnerabilities are being
exploited: we don't. While mass malware like WannaCry necessarily makes itself
visible, targeted attacks like what the Trident malware was used for can go
undetected for many years -- the Trident malware was discovered attacking iOS
9, but disassembly showed that it was designed to work at least as far back as
iOS 7.

For sophisticated attackers, like national intelligence agencies, stealth is a
feature. They put as much effort into making sure their attacks are undetected
as they do into ensuring they work in the first place. As a result, they're
probably pretty good at it. In `RAND's "Zero Days, Thousands of Nights"`_
report they spoke with numerous exploit developers and, "None we spoke to
believed that their vulnerabilities or exploits died or were discovered due to
use by a customer in some operational campaign, or by information leakage". As
an industry we need to evolve our thinking beyond mass malware if we want to
protect users against sophisticated nation state attackers. We must adapt to
the idea that many governments have exploits that go from malicious website to
kernel code execution against every major browser/operating system, and that we
have no visibility into how they're used.

So how do we protect against these attackers, if we have no awareness of what
vulnerabilities they're leveraging? First and foremost: adopting designs that
are more secure, such as aggressive sandboxing and privilege separation which
forces attackers to chain multiple vulnerabilities in multiple pieces of
software together, and using memory safe languages, which dramatically reduces
the volume of vulnerabilities that exist. Second, we can adopt exploit
mitigations which make turning a vulnerability into an exploit harder or
impossilble, for example Microsft's Arbitrary Code Guard which prevents
creating executable pages of memory in a process, forcing an attacker to either
come up with a bypass (this is what the Project Zero bug linked in the
beginning does) or package their entire payload as ROP. And finally, we can
find and fix security bugs. We get the most mileage out of finding bugs if we
focus on "high contention" attack surfaces, that is, attack surfaces that
everyone will have to go through to turn a vulnerability into an exploit; there
are a lot of places to find memory corruption in a browser's rendering engine,
there are a lot fewer ways to escape its sandbox, so APIs which define the
sandbox's security perimeter are critical to protect. And we can execute on all
of these without knowing what's being used in the wild (though having internal
red teams and bug bounties to attack our assumptions are critical).

In summary, we do not know how client software like operating systems and web
browsers are being exploited in targetted attacks. We should not assume that
the same approaches that worked against mass malware will be effective against
resourced nation states with narrow objectives. We should not design our
approach to security based on the idea that we'll known when and how it is
being exploited.

.. _`unfixed security issue in Microsoft's Edge browser`: https://bugs.chromium.org/p/project-zero/issues/detail?id=1435
.. _`RAND's "Zero Days, Thousands of Nights"`: https://www.rand.org/pubs/research_reports/RR1751.html
